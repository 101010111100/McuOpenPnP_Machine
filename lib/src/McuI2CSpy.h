/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : McuI2CSpy.h
**     Project     : FRDM-K64F_Generator
**     Processor   : MK64FN1M0VLL12
**     Component   : I2CSpy
**     Version     : Component 01.009, Driver 01.00, CPU db: 3.00.000
**     Repository  : Legacy User Components
**     Compiler    : GNU C Compiler
**     Date/Time   : 2016-12-24, 09:52, # CodeGen: 118
**     Abstract    :
**          This component implements a utility to inspect devices on the I2C bus.
**     Settings    :
**          Component name                                 : McuI2CSpy
**          I2C                                            : McuGenericI2C
**          Default Address                                : 0x0
**          Default Address Size                           : 1
**          Default Bytes per Line                         : 8
**          Shell                                          : Enabled
**            Shell                                        : McuShell
**            Utility                                      : McuUtility
**     Contents    :
**         Init             - byte McuI2CSpy_Init(void);
**         Deinit           - void McuI2CSpy_Deinit(void);
**         SetDeviceAddress - byte McuI2CSpy_SetDeviceAddress(byte addr);
**         GetDeviceAddress - byte McuI2CSpy_GetDeviceAddress(void);
**         SetAddressSize   - byte McuI2CSpy_SetAddressSize(byte size);
**         SetBytesPerLine  - byte McuI2CSpy_SetBytesPerLine(byte nofBytesPerLine);
**         ReadRegData      - byte McuI2CSpy_ReadRegData(dword addr, byte *data, word dataSize);
**         WriteRegData     - byte McuI2CSpy_WriteRegData(dword addr, byte *data, word dataSize);
**         ParseCommand     - byte McuI2CSpy_ParseCommand(const unsigned char *cmd, bool *handled, const...
**
**     License   :  Open Source (LGPL)
**     Copyright : (c) Copyright Erich Styger, 2013, all rights reserved.
**     Web/Blog: www.mcuoneclipse.com
**     This an open source software implementing software using Processor Expert.
**     This is a free software and is opened for education,  research  and commercial developments under license policy of following terms:
**     * This is a free software and there is NO WARRANTY.
**     * No restriction on use. You can use, modify and redistribute it for personal, non-profit or commercial product UNDER YOUR RESPONSIBILITY.
**     * Redistributions of source code must retain the above copyright notice.
** ###################################################################*/
/*!
** @file McuI2CSpy.h
** @version 01.00
** @brief
**          This component implements a utility to inspect devices on the I2C bus.
*/         
/*!
**  @addtogroup McuI2CSpy_module McuI2CSpy module documentation
**  @{
*/         

#ifndef __McuI2CSpy_H
#define __McuI2CSpy_H

/* MODULE McuI2CSpy. */

/* Include shared modules, which are used for whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
/* Include inherited beans */
#include "McuGenericI2C.h"
#include "McuShell.h"
#include "McuUtility.h"

#include "Cpu.h"


#define McuI2CSpy_PARSE_COMMAND_ENABLED  1  /* set to 1 if method ParseCommand() is present, 0 otherwise */


byte McuI2CSpy_Init(void);
/*
** ===================================================================
**     Method      :  McuI2CSpy_Init (component I2CSpy)
**     Description :
**         Initialization method
**     Parameters  : None
**     Returns     :
**         ---             - Error code
** ===================================================================
*/

void McuI2CSpy_Deinit(void);
/*
** ===================================================================
**     Method      :  McuI2CSpy_Deinit (component I2CSpy)
**     Description :
**         Deinitialization method
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

byte McuI2CSpy_SetDeviceAddress(byte addr);
/*
** ===================================================================
**     Method      :  McuI2CSpy_SetDeviceAddress (component I2CSpy)
**     Description :
**         Sets the I2C Device address to be used
**     Parameters  :
**         NAME            - DESCRIPTION
**         addr            - I2C 7bit address
**     Returns     :
**         ---             - Error code
** ===================================================================
*/

byte McuI2CSpy_SetAddressSize(byte size);
/*
** ===================================================================
**     Method      :  McuI2CSpy_SetAddressSize (component I2CSpy)
**     Description :
**         Specifies the address size of the I2C device memory
**     Parameters  :
**         NAME            - DESCRIPTION
**         size            - Either 1 (8bit), 2 (16bit), 3 (24bit),
**                           or 4 (32bit)
**     Returns     :
**         ---             - Error code
** ===================================================================
*/

byte McuI2CSpy_SetBytesPerLine(byte nofBytesPerLine);
/*
** ===================================================================
**     Method      :  McuI2CSpy_SetBytesPerLine (component I2CSpy)
**     Description :
**         Sets the number of bytes per line for the Dump shell command
**     Parameters  :
**         NAME            - DESCRIPTION
**         nofBytesPerLine - Number of bytes
**                           per line
**     Returns     :
**         ---             - Error code
** ===================================================================
*/

void McuGenericI2C_OnRequestBus(void);

void McuGenericI2C_OnReleaseBus(void);

byte McuI2CSpy_ReadRegData(dword addr, byte *data, word dataSize);
/*
** ===================================================================
**     Method      :  McuI2CSpy_ReadRegData (component I2CSpy)
**     Description :
**         Reads data starting from a register address from the current
**         device
**     Parameters  :
**         NAME            - DESCRIPTION
**         addr            - Device address
**       * data            - Pointer to data buffer where read data
**                           is stored
**         dataSize        - size of data buffer in bytes
**     Returns     :
**         ---             - Error code
** ===================================================================
*/

byte McuI2CSpy_WriteRegData(dword addr, byte *data, word dataSize);
/*
** ===================================================================
**     Method      :  McuI2CSpy_WriteRegData (component I2CSpy)
**     Description :
**         Writes data starting from a register address to the current
**         device
**     Parameters  :
**         NAME            - DESCRIPTION
**         addr            - Address in device
**       * data            - Pointer to data to write
**         dataSize        - Size of data in bytes
**     Returns     :
**         ---             - Error code
** ===================================================================
*/

byte McuI2CSpy_ParseCommand(const unsigned char *cmd, bool *handled, const McuShell_StdIOType *io);
/*
** ===================================================================
**     Method      :  McuI2CSpy_ParseCommand (component I2CSpy)
**     Description :
**         Shell Command Line parser
**     Parameters  :
**         NAME            - DESCRIPTION
**       * cmd             - Pointer to command string
**       * handled         - Pointer to variable which tells if
**                           the command has been handled or not
**         io              - Pointer to I/O structure
**     Returns     :
**         ---             - Error code
** ===================================================================
*/

byte McuI2CSpy_GetDeviceAddress(void);
/*
** ===================================================================
**     Method      :  McuI2CSpy_GetDeviceAddress (component I2CSpy)
**     Description :
**         Returns the current I2C Device address used
**     Parameters  : None
**     Returns     :
**         ---             - 7bit Device Address
** ===================================================================
*/

/* END McuI2CSpy. */

#endif
/* ifndef __McuI2CSpy_H */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.5 [05.21]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
