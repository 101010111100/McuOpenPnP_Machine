/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : McuFontDisplay.h
**     Project     : FRDM-K64F_Generator
**     Processor   : MK64FN1M0VLL12
**     Component   : FontDisplay
**     Version     : Component 01.195, Driver 01.00, CPU db: 3.00.000
**     Repository  : Legacy User Components
**     Compiler    : GNU C Compiler
**     Date/Time   : 2017-02-25, 14:18, # CodeGen: 155
**     Abstract    :
**
**     Settings    :
**          Component name                                 : McuFontDisplay
**          System                                         : 
**            Display                                      : McuGDisplay
**            Font                                         : McuFontCour14Normal
**          Watchdog                                       : Disabled
**     Contents    :
**         GetFontHeight   - void McuFontDisplay_GetFontHeight(McuFontDisplay_Font *font,...
**         GetStringHeight - McuFontDisplay_PixelDim McuFontDisplay_GetStringHeight(byte *str,...
**         GetCharWidth    - void McuFontDisplay_GetCharWidth(byte ch, McuFontDisplay_PixelDim *charWidth,...
**         GetStringWidth  - McuFontDisplay_PixelDim McuFontDisplay_GetStringWidth(byte *str,...
**         WriteString     - void McuFontDisplay_WriteString(byte *str, McuFontDisplay_PixelColor color,...
**         WriteChar       - void McuFontDisplay_WriteChar(byte ch, McuFontDisplay_PixelColor color,...
**
**     License   :  Open Source (LGPL)
**     Copyright : (c) Copyright Damian Schmid, Erich Styger, 2011, all rights reserved.
**     This an open source software in the form of a Processor Expert Embedded Component.
**     This is a free software and is opened for education,  research  and commercial developments under license policy of following terms:
**     * This is a free software and there is NO WARRANTY.
**     * No restriction on use. You can use, modify and redistribute it for personal, non-profit or commercial product UNDER YOUR RESPONSIBILITY.
**     * Redistributions of source code must retain the above copyright notice.
** ###################################################################*/
/*!
** @file McuFontDisplay.h
** @version 01.00
** @brief
**
*/         
/*!
**  @addtogroup McuFontDisplay_module McuFontDisplay module documentation
**  @{
*/         

#ifndef __McuFontDisplay_H
#define __McuFontDisplay_H

/* MODULE McuFontDisplay. */

/* Include shared modules, which are used for whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
/* Include inherited beans */
#include "McuGDisplay.h"
#include "McuFontCour14Normal.h"

#include "Cpu.h"

typedef McuGDisplay_PixelDim   McuFontDisplay_PixelDim; /* type which can hold a integral type for the x/y pixel dimension. This is depending on the display used. */
typedef McuGDisplay_PixelColor McuFontDisplay_PixelColor; /* Type definining the color type (depens on display used). */
typedef GFONT_Callbacks McuFontDisplay_Font; /* Pointer to GFONT_Callbacks */




void McuFontDisplay_WriteString(byte *str, McuFontDisplay_PixelColor color, McuFontDisplay_PixelDim *xCursor, McuFontDisplay_PixelDim *yCursor, McuFontDisplay_Font *font);
/*
** ===================================================================
**     Method      :  McuFontDisplay_WriteString (component FontDisplay)
**     Description :
**         Function to write a string or character at the startpoint.
**         Set the startpoint with the function setCursor.
**     Parameters  :
**         NAME            - DESCRIPTION
**       * str             - Pointer to the character string
**         color           - Foreground color to be used (for the
**                           character pixels)
**       * xCursor         - Pointer to x position of first
**                           character (upper left corner). On return
**                           this will contain the next y position.
**       * yCursor         - Pointer to y position of character
**                           (upper left corner). On return this will
**                           contain the next y position.
**       * font            - Pointer to font information
**     Returns     : Nothing
** ===================================================================
*/

void McuFontDisplay_WriteChar(byte ch, McuFontDisplay_PixelColor color, McuFontDisplay_PixelDim *xCursor, McuFontDisplay_PixelDim *yCursor, McuFontDisplay_Font *font);
/*
** ===================================================================
**     Method      :  McuFontDisplay_WriteChar (component FontDisplay)
**     Description :
**         Function to write a character at the start point. Set the
**         start point with the function setCursor.
**     Parameters  :
**         NAME            - DESCRIPTION
**         ch              - the character to print
**         color           - Foreground color to be used (for the
**                           character pixels)
**       * xCursor         - Pointer to x position of character
**                           (upper left corner). On return this will
**                           contain the next x position.
**       * yCursor         - Pointer to y position of character
**                           (upper left corner). On return this will
**                           contain the next y position.
**       * font            - Pointer to font information
**     Returns     : Nothing
** ===================================================================
*/

void McuFontDisplay_GetCharWidth(byte ch, McuFontDisplay_PixelDim *charWidth, McuFontDisplay_PixelDim *totalWidth, McuFontDisplay_Font *font);
/*
** ===================================================================
**     Method      :  McuFontDisplay_GetCharWidth (component FontDisplay)
**     Description :
**         returns the width (in pixels) of a font character.
**     Parameters  :
**         NAME            - DESCRIPTION
**         ch              - character for which to calculate the width
**       * charWidth       - Pointer to width of the
**                           character in pixels (this is only for the
**                           character, without the space after the
**                           character)
**       * totalWidth      - Pointer to the total width
**                           of the character, including to the space
**                           after the character.
**       * font            - Pointer to font information
**     Returns     : Nothing
** ===================================================================
*/

McuFontDisplay_PixelDim McuFontDisplay_GetStringWidth(byte *str, McuFontDisplay_Font *font, McuFontDisplay_PixelDim *lastCharSpace);
/*
** ===================================================================
**     Method      :  McuFontDisplay_GetStringWidth (component FontDisplay)
**     Description :
**         returns the width (in pixels) of a font string. For multiple
**         line strings (separated by \
**         ) or for strings with \r it returns the longest string
**         length.
**     Parameters  :
**         NAME            - DESCRIPTION
**       * str             - Pointer to the string.
**       * font            - Pointer to font information
**       * lastCharSpace   - Pointer to the width
**                           of the last character space, useful if you
**                           combine multiple strings. The pointer may
**                           be NULL.
**     Returns     :
**         ---             - Error code
** ===================================================================
*/

void McuFontDisplay_GetFontHeight(McuFontDisplay_Font *font, McuFontDisplay_PixelDim *charHeight, McuFontDisplay_PixelDim *totalHeight);
/*
** ===================================================================
**     Method      :  McuFontDisplay_GetFontHeight (component FontDisplay)
**     Description :
**         returns the height (in pixels) of a font.
**     Parameters  :
**         NAME            - DESCRIPTION
**       * font            - Pointer to font information
**       * charHeight      - Pointer to height of the
**                           character in pixels.
**       * totalHeight     - Pointer to the total
**                           height of the character, including to the
**                           space below the character.
**     Returns     : Nothing
** ===================================================================
*/

McuFontDisplay_PixelDim McuFontDisplay_GetStringHeight(byte *str, McuFontDisplay_Font *font, McuFontDisplay_PixelDim *lastLineSpace);
/*
** ===================================================================
**     Method      :  McuFontDisplay_GetStringHeight (component FontDisplay)
**     Description :
**         returns the height (in pixels) of a font string. For
**         multiple line strings (separated by newline) or for strings
**         with \r it returns the longest list.
**     Parameters  :
**         NAME            - DESCRIPTION
**       * str             - Pointer to the string.
**       * font            - Pointer to font information
**       * lastLineSpace   - Pointer to the height
**                           of the last line space, useful if you
**                           combine multiple strings. The pointer may
**                           be NULL.
**     Returns     :
**         ---             - Error code
** ===================================================================
*/

/* END McuFontDisplay. */

#endif
/* ifndef __McuFontDisplay_H */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.5 [05.21]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
