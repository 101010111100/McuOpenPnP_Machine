/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : McuKinetisTools.h
**     Project     : FRDM-K64F_Generator
**     Processor   : MK64FN1M0VLL12
**     Component   : KinetisTools
**     Version     : Component 01.038, Driver 01.00, CPU db: 3.00.000
**     Repository  : Legacy User Components
**     Compiler    : GNU C Compiler
**     Date/Time   : 2017-05-06, 16:30, # CodeGen: 178
**     Abstract    :
**
**     Settings    :
**          Component name                                 : McuKinetisTools
**          SDK                                            : McuLib
**          Utility                                        : McuUtility
**          Shell                                          : Enabled
**            Shell                                        : McuShell
**     Contents    :
**         SoftwareReset          - void McuKinetisTools_SoftwareReset(void);
**         UIDGet                 - uint8_t McuKinetisTools_UIDGet(McuKinetisTools_UID *uid);
**         UIDSame                - bool McuKinetisTools_UIDSame(const McuKinetisTools_UID *src, const...
**         UIDtoString            - uint8_t McuKinetisTools_UIDtoString(const McuKinetisTools_UID *uid, uint8_t...
**         GetKinetisFamilyString - McuKinetisTools_ConstCharPtr McuKinetisTools_GetKinetisFamilyString(void);
**         GetPC                  - void* McuKinetisTools_GetPC(void);
**         GetSP                  - void* McuKinetisTools_GetSP(void);
**         SetPSP                 - void McuKinetisTools_SetPSP(void *setval);
**         SetLR                  - void McuKinetisTools_SetLR(uint32_t setval);
**         InitCycleCounter       - void McuKinetisTools_InitCycleCounter(void);
**         ResetCycleCounter      - void McuKinetisTools_ResetCycleCounter(void);
**         EnableCycleCounter     - void McuKinetisTools_EnableCycleCounter(void);
**         DisableCycleCounter    - void McuKinetisTools_DisableCycleCounter(void);
**         GetCycleCounter        - uint32_t McuKinetisTools_GetCycleCounter(void);
**         ParseCommand           - uint8_t McuKinetisTools_ParseCommand(const unsigned char* cmd, bool *handled,...
**
**     * Copyright (c) 2014-2017, Erich Styger
**      * Web:         https://mcuoneclipse.com
**      * SourceForge: https://sourceforge.net/projects/mcuoneclipse
**      * Git:         https://github.com/ErichStyger/McuOnEclipse_PEx
**      * All rights reserved.
**      *
**      * Redistribution and use in source and binary forms, with or without modification,
**      * are permitted provided that the following conditions are met:
**      *
**      * - Redistributions of source code must retain the above copyright notice, this list
**      *   of conditions and the following disclaimer.
**      *
**      * - Redistributions in binary form must reproduce the above copyright notice, this
**      *   list of conditions and the following disclaimer in the documentation and/or
**      *   other materials provided with the distribution.
**      *
**      * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
**      * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
**      * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
**      * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
**      * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**      * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
**      * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
**      * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
**      * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
**      * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
** ###################################################################*/
/*!
** @file McuKinetisTools.h
** @version 01.00
** @brief
**
*/         
/*!
**  @addtogroup McuKinetisTools_module McuKinetisTools module documentation
**  @{
*/         

#ifndef __McuKinetisTools_H
#define __McuKinetisTools_H

/* MODULE McuKinetisTools. */
#include "McuLib.h" /* SDK and API used */
#include "McuKinetisToolsconfig.h" /* configuration */

/* Include inherited components */
#include "McuLib.h"
#include "McuUtility.h"
#include "McuShell.h"


#ifndef __BWUserType_McuKinetisTools_ConstCharPtr
#define __BWUserType_McuKinetisTools_ConstCharPtr
  typedef const uint8_t *McuKinetisTools_ConstCharPtr; /* Pointer to constant string */
#endif


#if McuLib_CONFIG_CORTEX_M >= 3 /* only for Cortex-M3 or higher */
  /* DWT (Data Watchpoint and Trace) registers, only exists on ARM Cortex with a DWT unit */
  #define McuKinetisTools_DWT_CONTROL             (*((volatile uint32_t*)0xE0001000))
    /*!< DWT Control register */
  #define McuKinetisTools_DWT_CYCCNTENA_BIT       (1UL<<0)
    /*!< CYCCNTENA bit in DWT_CONTROL register */
  #define McuKinetisTools_DWT_CYCCNT              (*((volatile uint32_t*)0xE0001004))
    /*!< DWT Cycle Counter register */
  #define McuKinetisTools_DEMCR                   (*((volatile uint32_t*)0xE000EDFC))
    /*!< DEMCR: Debug Exception and Monitor Control Register */
  #define McuKinetisTools_TRCENA_BIT              (1UL<<24)
    /*!< Trace enable bit in DEMCR register */
#endif

typedef struct {
  uint8_t id[16]; /* 128 bit ID */
} McuKinetisTools_UID;

typedef enum {
  McuKinetisTools_FAMILY_K10_K12,      /* K10 or K12 */
  McuKinetisTools_FAMILY_K20_K22,      /* K10 or K12 */
  McuKinetisTools_FAMILY_K30_K11_K61,  /* K30, K11 or K61 */
  McuKinetisTools_FAMILY_K40_K21,      /* K40 or K21 */
  McuKinetisTools_FAMILY_K70,          /* K70 */
  McuKinetisTools_FAMILY_UNKONWN,      /* Unknown */
  McuKinetisTools_FAMILY_LAST          /* Must be last one! */
} McuKinetisTools_FAMILY;

#define McuKinetisTools_PARSE_COMMAND_ENABLED  McuKinetisTools_CONFIG_PARSE_COMMAND_ENABLED
  /*!< set to 1 if method ParseCommand() is present, 0 otherwise */

#ifdef __cplusplus
extern "C" {
#endif

uint8_t McuKinetisTools_ParseCommand(const unsigned char* cmd, bool *handled, const McuShell_StdIOType *io);
/*
** ===================================================================
**     Method      :  McuKinetisTools_ParseCommand (component KinetisTools)
**     Description :
**         Shell Command Line parser. Method is only available if Shell
**         is enabled in the component properties.
**     Parameters  :
**         NAME            - DESCRIPTION
**         cmd             - Pointer to command string
**       * handled         - Pointer to variable which tells if
**                           the command has been handled or not
**       * io              - Pointer to I/O structure
**     Returns     :
**         ---             - Error code
** ===================================================================
*/

void McuKinetisTools_SoftwareReset(void);
/*
** ===================================================================
**     Method      :  McuKinetisTools_SoftwareReset (component KinetisTools)
**     Description :
**         Performs a reset of the device
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

uint8_t McuKinetisTools_UIDGet(McuKinetisTools_UID *uid);
/*
** ===================================================================
**     Method      :  McuKinetisTools_UIDGet (component KinetisTools)
**     Description :
**         Return the 128bit UID of the device
**     Parameters  :
**         NAME            - DESCRIPTION
**       * uid             - Pointer to 
**     Returns     :
**         ---             - Error code
** ===================================================================
*/

bool McuKinetisTools_UIDSame(const McuKinetisTools_UID *src, const McuKinetisTools_UID *dst);
/*
** ===================================================================
**     Method      :  McuKinetisTools_UIDSame (component KinetisTools)
**     Description :
**         Compares two UID
**     Parameters  :
**         NAME            - DESCRIPTION
**       * src             - Pointer to 
**         Variable_1      - 
**     Returns     :
**         ---             - TRUE if the same, FALSE otherwise
** ===================================================================
*/

uint8_t McuKinetisTools_UIDtoString(const McuKinetisTools_UID *uid, uint8_t *buf, size_t bufSize);
/*
** ===================================================================
**     Method      :  McuKinetisTools_UIDtoString (component KinetisTools)
**     Description :
**         Returns the value of the UID as string
**     Parameters  :
**         NAME            - DESCRIPTION
**         uid             - 
**       * buf             - Pointer to 
**         bufSize         - 
**     Returns     :
**         ---             - Error code
** ===================================================================
*/

McuKinetisTools_ConstCharPtr McuKinetisTools_GetKinetisFamilyString(void);
/*
** ===================================================================
**     Method      :  McuKinetisTools_GetKinetisFamilyString (component KinetisTools)
**     Description :
**         Determines the Kinetis Familiy based on SIM_SDID register
**     Parameters  : None
**     Returns     :
**         ---             - String describing the Kinetis Family
** ===================================================================
*/

void* McuKinetisTools_GetPC(void);
/*
** ===================================================================
**     Method      :  McuKinetisTools_GetPC (component KinetisTools)
**     Description :
**         returns the program counter
**     Parameters  : None
**     Returns     :
**         ---             - program counter
** ===================================================================
*/

void* McuKinetisTools_GetSP(void);
/*
** ===================================================================
**     Method      :  McuKinetisTools_GetSP (component KinetisTools)
**     Description :
**         returns the stack pointer
**     Parameters  : None
**     Returns     :
**         ---             - stack pointer
** ===================================================================
*/

void McuKinetisTools_SetPSP(void *setval);
/*
** ===================================================================
**     Method      :  McuKinetisTools_SetPSP (component KinetisTools)
**     Description :
**         sets the process stack pointer
**     Parameters  :
**         NAME            - DESCRIPTION
**         setval          - new PSP value
**     Returns     : Nothing
** ===================================================================
*/

void McuKinetisTools_SetLR(uint32_t setval);
/*
** ===================================================================
**     Method      :  McuKinetisTools_SetLR (component KinetisTools)
**     Description :
**         Sets the link register
**     Parameters  :
**         NAME            - DESCRIPTION
**         setval          - new LR value
**     Returns     : Nothing
** ===================================================================
*/

#if McuLib_CONFIG_CORTEX_M >= 3 /* only for Cortex-M3 or higher */
#define McuKinetisTools_InitCycleCounter() \
  McuKinetisTools_DEMCR |= McuKinetisTools_TRCENA_BIT
  /*!< TRCENA: Enable trace and debug block DEMCR (Debug Exception and Monitor Control Register */
/*
** ===================================================================
**     Method      :  McuKinetisTools_InitCycleCounter (component KinetisTools)
**     Description :
**         Initializes the cycle counter, available if the core has a
**         DWT (Data Watchpoint and Trace) unit, usually present on
**         M3/M4/M7
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
#endif

#if McuLib_CONFIG_CORTEX_M >= 3 /* only for Cortex-M3 or higher */
#define McuKinetisTools_ResetCycleCounter() \
  McuKinetisTools_DWT_CYCCNT = 0
  /*!< Reset cycle counter */
/*
** ===================================================================
**     Method      :  McuKinetisTools_ResetCycleCounter (component KinetisTools)
**     Description :
**         Reset the cycle counter (set it to zero)
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
#endif

#if McuLib_CONFIG_CORTEX_M >= 3 /* only for Cortex-M3 or higher */
#define McuKinetisTools_EnableCycleCounter() \
  McuKinetisTools_DWT_CONTROL |= McuKinetisTools_DWT_CYCCNTENA_BIT
  /*!< Enable cycle counter */
/*
** ===================================================================
**     Method      :  McuKinetisTools_EnableCycleCounter (component KinetisTools)
**     Description :
**         Enables counting the cycles.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
#endif

#if McuLib_CONFIG_CORTEX_M >= 3 /* only for Cortex-M3 or higher */
#define McuKinetisTools_DisableCycleCounter() \
  McuKinetisTools_DWT_CONTROL &= ~McuKinetisTools_DWT_CYCCNTENA_BIT
  /*!< Disable cycle counter */
/*
** ===================================================================
**     Method      :  McuKinetisTools_DisableCycleCounter (component KinetisTools)
**     Description :
**         Disables the cycle counter.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
#endif

#if McuLib_CONFIG_CORTEX_M >= 3 /* only for Cortex-M3 or higher */
#define McuKinetisTools_GetCycleCounter() \
  McuKinetisTools_DWT_CYCCNT
  /*!< Read cycle counter register */
/*
** ===================================================================
**     Method      :  McuKinetisTools_GetCycleCounter (component KinetisTools)
**     Description :
**         Return the current cycle counter value
**     Parameters  : None
**     Returns     :
**         ---             - cycle counter
** ===================================================================
*/
#endif

/* END McuKinetisTools. */

#ifdef __cplusplus
}  /* extern "C" */
#endif

#endif
/* ifndef __McuKinetisTools_H */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.5 [05.21]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
